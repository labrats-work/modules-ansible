- name: Debug Master Defaults
  ansible.builtin.debug: 
    var: master_defaults
  when: kubernetes_debug

- name: Debug Master Group
  ansible.builtin.debug: 
    var: master_group
  when: kubernetes_debug

- name: Debug Master
  ansible.builtin.debug: 
    var: master
  when: kubernetes_debug
    
- name: Set Default Kubernetes Facts
  ansible.builtin.set_fact: 
    kubernetes: "{{ master_defaults }}"
    
- name: Merge Master_Group Kubernetes Facts
  ansible.builtin.set_fact: 
    kubernetes: "{{ kubernetes | combine(master_group) }}"
  when: master_group is defined
    
- name: Merge Master Kubernetes Facts
  ansible.builtin.set_fact: 
    kubernetes: "{{ kubernetes | combine(master) }}"
  when: master is defined

- name: Debug Merged Dictionary
  ansible.builtin.debug: 
    var: kubernetes
  when: kubernetes_debug

- name: Check if Kubernetes is installed
  command: kubectl version
  register: kubectl_result
  ignore_errors: true

- name: Install if kubectl version rc is zero
  when: kubectl_result.rc == 1
  block:
    - name: Copy files for kubeadm init.
      ansible.builtin.template:
        src: "templates/kubeadm_init.yaml.j2"
        dest: /root/kubeadm_init.yaml
        owner: root
        group: root
        mode: '0600'

    - name: Restart container runtime
      ansible.builtin.service:
        name: containerd
        state: restarted 

    - name: Run kubectl init
      ansible.builtin.command: kubeadm init --config=/root/kubeadm_init.yaml --upload-certs

    - name: Wait until the file /etc/kubernetes/admin.conf is present before continuing
      ansible.builtin.wait_for:
        path: /etc/kubernetes/admin.conf

    - name: Wait for port 6443 to become open on the host, don't start checking for 10 seconds
      ansible.builtin.wait_for:
        port: 6443
        delay: 10
        host: localhost

    - name: Create .kube directory
      ansible.builtin.file:
        path: .kube
        state: directory
        owner: sysadmin
        group: sysadmin
        mode: '0700'

    - name: Copy admin.conf
      ansible.builtin.copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: .kube/config
        owner: sysadmin
        group: sysadmin
        mode: '0600'

    - name: Copy files for calico init.
      become: no
      ansible.builtin.template:
        src: "templates/calico_init.yaml.j2"
        dest: calico_init.yaml
        owner: sysadmin
        group: sysadmin
        mode: '0600'

    - name: Create tigera operator.
      become: no
      ansible.builtin.command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.0/manifests/tigera-operator.yaml
      ignore_errors: yes

    - name: Run calico init.
      become: no
      ansible.builtin.command: kubectl apply -f calico_init.yaml
      ignore_errors: yes

- name: Get cluster_ca_data from master config file.
  ansible.builtin.shell: grep certificate-authority-data /etc/kubernetes/admin.conf | tr -d ' ' | cut -d ':' -f 2-
  register: grep_cluster_ca_data

- name: Get cluster_server from master config file.
  ansible.builtin.shell: grep server /etc/kubernetes/admin.conf | tr -d ' ' | cut -d ':' -f 2-
  register: grep_cluster_server

- name: Get kubeadm_token.
  ansible.builtin.shell: kubeadm token create
  register: kubeadm_token

- name: Set facts for join data.
  ansible.builtin.set_fact: 
    discovery:
      ca_data: "{{ grep_cluster_ca_data.stdout }}"
      server: "{{ grep_cluster_server.stdout }}"
      tlsBootstrapToken: "{{ kubeadm_token.stdout }}"

- name: Debug Discovery
  ansible.builtin.debug: 
    var: discovery
  when: kubernetes_debug